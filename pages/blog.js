import { useState, useEffect } from 'react';
import ReactPaginate from 'react-paginate';
import Head from 'next/head';
import Image from 'next/image';
import styled from 'styled-components';
import newsData from '../data/news-data';
import articlesData from '../data/articles-data';
import Blogs from '../components/BlogsContainer';
import BasketModal from '../components/Modals/BasketModal';
import SubscribeModal from '../components/Modals/SubscribeModal';
import Navbar from '../components/Navbar';
import Footer from '../components/Footer';
import Button from '../components/Button';

export default function Blog() {
	// SUBSCRIBE AND BASKET MODAL
	const [subscribeModal, setSubscribeModal] = useState(false);
	const [basketModal, setBasketModal] = useState(false);
	const subscribe = async(ev) => {
		ev.preventDefault();
		setSubscribeModal(!subscribeModal);
	}
	const basket = async(ev) => {
		ev.preventDefault();
		setBasketModal(!basketModal);
	}

	const [option, setOption] = useState(1);
	const news = newsData.slice().reverse();
	const articles = articlesData.slice().reverse();
	const [blogs, setBlogs] = useState(articles);

	// We start with an empty list of items.
	const [currentArticles, setCurrentArticles] = useState(articles);
	const [pageCountArticles, setPageCountArticles] = useState(0);
	const [currentNews, setCurrentNews] = useState(news);
	const [pageCountNews, setPageCountNews] = useState(0);
	// Here we use item offsets; we could also use page offsets
	// following the API or data you're working with.
	const [itemOffset, setItemOffset] = useState(0);
	
	const chooseArticles = async(ev) => {
		ev.preventDefault();
		setOption(1);
		setItemOffset(0);
		setBlogs(articles);
	}

	const chooseNews = async(ev) => {
		ev.preventDefault();
		setOption(2);
		setItemOffset(0);
		setBlogs(news);
	}

	useEffect(() => {
		// Fetch items from another resources.
		const endOffset = itemOffset + 3;
		console.log(`Loading items from ${itemOffset} to ${endOffset}`);
		setCurrentArticles(articles.slice(itemOffset, endOffset));
		setPageCountArticles(Math.ceil(articles.length / 3));
		setCurrentNews(news.slice(itemOffset, endOffset));
		setPageCountNews(Math.ceil(news.length / 3));
	}, [itemOffset, 3]);
  
	// Invoke when user click to request another page.
	const handlePageClick = (event) => {
		const newOffset = (event.selected * 3) % blogs.length;
		console.log(
		  `User requested page number ${event.selected + 1}, which is offset ${newOffset}`
		);
		setItemOffset(newOffset);
	};

	return (
		<div>
			<Head>
				<title>ЧЕКМАРКЕТ</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png"/>
				<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png"/>
				<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png"/>
				<link rel="manifest" href="/site.webmanifest"/>
				<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5"/>
				<meta name="msapplication-TileColor" content="#da532c"/>
				<meta name="theme-color" content="#ffffff"/>
			</Head>

			<div>
				{ basketModal ? <BasketModal close={ basket }/> : null };
				{ subscribeModal ? <SubscribeModal modal={ subscribe }/> : null };

				<Navbar modal={ basket }/>
						
				<Wrapper>
					<div className='container'>
						<div className='header'>
							<h3 className='title'>Блог</h3>

							<div className='icons'>
								<img src="/modal/rectangle.svg" alt="rectangle" width={15} height={15} layout="fixed"/>
								<img src="/modal/triangle.svg" alt="triangle" width={40} height={15} layout="fixed"/>
								<img src="/modal/ellipse.svg" alt="ellipse" width={15} height={15} layout="fixed"/>
							</div>

							<p className='subtitle'>Читайте полезные статьи и последние новости от ЧЕК МАРКЕТ</p>
						</div>

						<div className='buttons'>
							<div className={ option === 1 ? 'blog-button' : 'blog-button non-active' } onClick={ chooseArticles }>
								<Button text={ "Статьи" }/>
							</div>
							<div className={ option === 2 ? 'blog-button' : 'blog-button non-active' } onClick={ chooseNews }>
								<Button text={ "Новости" }/>
							</div>
						</div>

						{option === 1 ?
							<div className='blog-container'>
								<Blogs currentItems={ currentArticles } option={ "Статьи" }/>
								<ReactPaginate
									key="paginate1"
									breakLabel="..."
									nextLabel="Следующая"
									onPageChange={ handlePageClick }
									marginPagesDisplayed={1}
									pageRangeDisplayed={3}
									pageCount={ pageCountArticles }
									previousLabel="Предыдущая"
									renderOnZeroPageCount={ null }
								/>
							</div>
								:
							<div className='blog-container'>
								<Blogs currentItems={ currentNews } option={ "Новости" }/>
								<ReactPaginate
									key="paginate2"
									breakLabel="..."
									nextLabel="Следующая"
									onPageChange={ handlePageClick }
									marginPagesDisplayed={1}
									pageRangeDisplayed={3}
									pageCount={ pageCountNews }
									previousLabel="Предыдущая"
									renderOnZeroPageCount={ null }
								/>
							</div>
						}
					</div>
				</Wrapper>
						
				<Footer modal={ subscribe }/>
			</div>
		</div>
	);
}

const Wrapper = styled.section`
	display: flex;
	justify-content: center;

	@keyframes animateBg2 {
		0% {
			opacity: 100%
		} 100% {
			opacity: 80%
		}
	}

	@keyframes animateText2 {
		0% {
			opacity: 100%
		} 100% {
			opacity: 80%
		}
	}

	@keyframes animateBgOut2 {
		0% {
			opacity: 80%
			border: none;
		} 100% {
			opacity: 100%
		}
	}

	@keyframes animateTextOut2 {
		0% {
			opacity: 80%
		} 100% {
			opacity: 100%
		}
	}

	.container {
		position: relative;
		width: 72.5rem;
		height: 93.125rem;
		margin: 14.375rem 0 13.125rem;
	}

	.header {
		width: 25rem;
		margin-bottom: 3.75rem;
	}

	.title {
		line-height: 3.125rem;
		margin-bottom: 1.25rem;
	}

	.icons {
		margin-bottom: 0.9375rem;
	}

	.subtitle {
		line-height: 1.875rem;
	}

	.buttons {
		display: flex;
	}

	.blog-button {
		width: 10rem;
		height: 3.125rem;
		border-radius: 0.625rem;
		margin-right: 1.25rem;
	}

	.blog-button .text {
		font-size: 18px;
		font-weight: 700;
	}

	.non-active .button {
		background-color: transparent;
		border: 1px solid var(--clr-primary-1);
	}

	.non-active .text {
		color: var(--clr-primary-1);
	}
	
	.blog-button:hover .button {
		opacity: 80%
		animation: animateBg2 0.3s linear;
	}
	
	.blog-button:hover .text {
		opacity: 80%
		animation: animateText2 0.3s linear;
	}
	
	.blog-button:(not):hover .button {
		opacity: 100%
		animation: animateBgOut2 0.3s linear;
	}
	
	.blog-button:(not):hover .text {
		opacity: 100%
		animation: animateTextOut2 0.3s linear;
	}
	
	.blog-container {
		ul {
			position: absolute;
			width: 100%;
			bottom: 0;
			display: flex;
			justify-content: center;
			align-items: center;
			border: 2px solid blue;
		}
		
		li {
			width: 1.875rem;
			height: 1.875rem;
			font-weight: 400;
			cursor: pointer;
			margin: 0 .625rem;
		}

		li a {
			width: 100%;
			height: 100%;
			display: flex;
			justify-content: center;
			align-items: center;
			font-size: 18px;
		}

		.previous,
		.next {
			width: 10rem;
			height: 1.875rem;
			text-decoration: underline;
			margin: 0 3.75rem;
		}
		
		.previous {
			justify-content: flex-end;
		}
		
		.next {
			justify-content: flex-start;
		}
		
		.selected {
			width: 3.125rem;
			height: 3.125rem;
			background-color: var(--clr-primary-4);
			border-radius: 5px;
			margin: 0 .3125rem;
		}

		.selected p {
			font-weight: 600;
		}
	}

	@media (max-width: 1440px) {
		.container {	
			margin: 13.125rem 0 11.1875rem;
		}
		
		.content {
			width: 69.375rem;
		}
	}
	
	@media (max-width: 1220px) {}
	
	@media (max-width: 992px) {}
	
	@media (max-width: 768px) {}
	
	@media (max-width: 650px) {}
`