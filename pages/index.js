import { useState } from 'react';
import Head from 'next/head';
import SubscribeModal from '../components/SubscribeModal';
import DirectionsModal from '../components/DirectionsModal';
import Navbar from '../components/Navbar';
import Footer from '../components/Footer';
import Hero from '../components/Hero';
import About from '../components/About';
import Direction, { selectedType, openModal } from '../components/Direction';
import Blog from '../components/Blog';
import Recomendations from '../components/Recomendations';
import Reviews from '../components/Reviews';

export default function Home() {
  const [subscribeModal, setSubscribeModal] = useState(false);
  const [openModal, setOpenModal] = useState(false);
	const [directionType, setDirectionType] = useState([
		{ id: 1, text: "Противокражные системы" },
		{ id: 2, text: "Автоматизация торговли" },
		{ id: 3, text: "Подсчёт посетителей" },
		{ id: 4, text: "Расходный материал" }
	]);  
  const [selectedType, setSelectedType] = useState({});
  
	const subscribe = async(ev) => {
    ev.preventDefault();
		setSubscribeModal(!subscribeModal);
	}

  const modal = async( ev ) => {
    ev.preventDefault();
    if (!openModal)
      setSelectedType(directionType.find(item => item.id == ev.target.id));
    else
      setSelectedType({});
    setOpenModal(!openModal);
  }

  return (
    <div>
      <Head>
        <title>ЧЕКМАРКЕТ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png"/>
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png"/>
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png"/>
        <link rel="manifest" href="/site.webmanifest"/>
        <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5"/>
        <meta name="msapplication-TileColor" content="#da532c"/>
        <meta name="theme-color" content="#ffffff"/>
      </Head>

      {openModal ? 
				<DirectionsModal type={ selectedType } close={ modal }/> 
					:
        <>
          {subscribeModal ?
            <SubscribeModal modal={ subscribe }/>
              :
            <>
              <Navbar home={ true }/>

              <Hero/>
              <About/>
              <Direction type={ directionType } action={ modal }/>
              <Blog/>
              <Recomendations/>
              <Reviews/>
              
              <Footer modal={ subscribe }/>
            </>
          }
        </>
      }
    </div>
  );
}